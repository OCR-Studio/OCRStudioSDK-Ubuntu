# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _pyocrstudiosdk
else:
    import _pyocrstudiosdk

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyocrstudiosdk.delete_SwigPyIterator

    def value(self):
        return _pyocrstudiosdk.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _pyocrstudiosdk.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _pyocrstudiosdk.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _pyocrstudiosdk.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _pyocrstudiosdk.SwigPyIterator_equal(self, x)

    def copy(self):
        return _pyocrstudiosdk.SwigPyIterator_copy(self)

    def next(self):
        return _pyocrstudiosdk.SwigPyIterator_next(self)

    def __next__(self):
        return _pyocrstudiosdk.SwigPyIterator___next__(self)

    def previous(self):
        return _pyocrstudiosdk.SwigPyIterator_previous(self)

    def advance(self, n):
        return _pyocrstudiosdk.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _pyocrstudiosdk.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _pyocrstudiosdk.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _pyocrstudiosdk.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _pyocrstudiosdk.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _pyocrstudiosdk.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _pyocrstudiosdk.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _pyocrstudiosdk:
_pyocrstudiosdk.SwigPyIterator_swigregister(SwigPyIterator)
class OCRStudioSDKDelegate(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKDelegate

    def Callback(self, json_message):
        return _pyocrstudiosdk.OCRStudioSDKDelegate_Callback(self, json_message)

# Register OCRStudioSDKDelegate in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKDelegate_swigregister(OCRStudioSDKDelegate)
class OCRStudioSDKException(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKException

    def __init__(self, *args):
        _pyocrstudiosdk.OCRStudioSDKException_swiginit(self, _pyocrstudiosdk.new_OCRStudioSDKException(*args))

    def Type(self):
        return _pyocrstudiosdk.OCRStudioSDKException_Type(self)

    def Message(self):
        return _pyocrstudiosdk.OCRStudioSDKException_Message(self)

# Register OCRStudioSDKException in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKException_swigregister(OCRStudioSDKException)
class OCRStudioSDKString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKString

    def __init__(self, *args):
        _pyocrstudiosdk.OCRStudioSDKString_swiginit(self, _pyocrstudiosdk.new_OCRStudioSDKString(*args))

    def __iadd__(self, other):
        return _pyocrstudiosdk.OCRStudioSDKString___iadd__(self, other)

    def __add__(self, other):
        return _pyocrstudiosdk.OCRStudioSDKString___add__(self, other)

    def CStr(self):
        return _pyocrstudiosdk.OCRStudioSDKString_CStr(self)

    def Size(self):
        return _pyocrstudiosdk.OCRStudioSDKString_Size(self)

# Register OCRStudioSDKString in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKString_swigregister(OCRStudioSDKString)
OCRSTUDIOSDK_PIXEL_FORMAT_G = _pyocrstudiosdk.OCRSTUDIOSDK_PIXEL_FORMAT_G
OCRSTUDIOSDK_PIXEL_FORMAT_GA = _pyocrstudiosdk.OCRSTUDIOSDK_PIXEL_FORMAT_GA
OCRSTUDIOSDK_PIXEL_FORMAT_AG = _pyocrstudiosdk.OCRSTUDIOSDK_PIXEL_FORMAT_AG
OCRSTUDIOSDK_PIXEL_FORMAT_RGB = _pyocrstudiosdk.OCRSTUDIOSDK_PIXEL_FORMAT_RGB
OCRSTUDIOSDK_PIXEL_FORMAT_BGR = _pyocrstudiosdk.OCRSTUDIOSDK_PIXEL_FORMAT_BGR
OCRSTUDIOSDK_PIXEL_FORMAT_BGRA = _pyocrstudiosdk.OCRSTUDIOSDK_PIXEL_FORMAT_BGRA
OCRSTUDIOSDK_PIXEL_FORMAT_ARGB = _pyocrstudiosdk.OCRSTUDIOSDK_PIXEL_FORMAT_ARGB
OCRSTUDIOSDK_PIXEL_FORMAT_RGBA = _pyocrstudiosdk.OCRSTUDIOSDK_PIXEL_FORMAT_RGBA
OCRSTUDIOSDK_YUV_FORMAT_NOT_SET = _pyocrstudiosdk.OCRSTUDIOSDK_YUV_FORMAT_NOT_SET
OCRSTUDIOSDK_YUV_FORMAT_NV21 = _pyocrstudiosdk.OCRSTUDIOSDK_YUV_FORMAT_NV21
OCRSTUDIOSDK_YUV_FORMAT_420_888 = _pyocrstudiosdk.OCRSTUDIOSDK_YUV_FORMAT_420_888
class OCRStudioSDKImage(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    @staticmethod
    def PagesCount(filename):
        return _pyocrstudiosdk.OCRStudioSDKImage_PagesCount(filename)

    @staticmethod
    def PageName(filename, page_number):
        return _pyocrstudiosdk.OCRStudioSDKImage_PageName(filename, page_number)

    @staticmethod
    def CreateEmpty():
        return _pyocrstudiosdk.OCRStudioSDKImage_CreateEmpty()

    @staticmethod
    def CreateFromFile(filename, page_number=0, max_width=25000, max_height=25000):
        return _pyocrstudiosdk.OCRStudioSDKImage_CreateFromFile(filename, page_number, max_width, max_height)

    @staticmethod
    def CreateFromFileBuffer(data, data_size, page_number=0, max_width=25000, max_height=25000):
        return _pyocrstudiosdk.OCRStudioSDKImage_CreateFromFileBuffer(data, data_size, page_number, max_width, max_height)

    @staticmethod
    def CreateFromBase64FileBuffer(base64_data, page_number=0, max_width=25000, max_height=25000):
        return _pyocrstudiosdk.OCRStudioSDKImage_CreateFromBase64FileBuffer(base64_data, page_number, max_width, max_height)

    @staticmethod
    def CreateFromPixelBuffer(data, data_size, width, height, bytes_per_line, bytes_per_channel, pixel_format):
        return _pyocrstudiosdk.OCRStudioSDKImage_CreateFromPixelBuffer(data, data_size, width, height, bytes_per_line, bytes_per_channel, pixel_format)

    @staticmethod
    def CreateFromBuffer(data, data_size, width, height, bytes_per_line, channels):
        return _pyocrstudiosdk.OCRStudioSDKImage_CreateFromBuffer(data, data_size, width, height, bytes_per_line, channels)

    @staticmethod
    def CreateFromYUVSimple(yuv_data, yuv_data_size, width, height):
        return _pyocrstudiosdk.OCRStudioSDKImage_CreateFromYUVSimple(yuv_data, yuv_data_size, width, height)

    @staticmethod
    def CreateFromYUV(y_plane, y_plane_size, y_plane_row_stride, y_plane_pixel_stride, u_plane, u_plane_size, u_plane_row_stride, u_plane_pixel_stride, v_plane, v_plane_size, v_plane_row_stride, v_plane_pixel_stride, width, height, yuv_format):
        return _pyocrstudiosdk.OCRStudioSDKImage_CreateFromYUV(y_plane, y_plane_size, y_plane_row_stride, y_plane_pixel_stride, u_plane, u_plane_size, u_plane_row_stride, u_plane_pixel_stride, v_plane, v_plane_size, v_plane_row_stride, v_plane_pixel_stride, width, height, yuv_format)
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKImage

    def DeepCopy(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_DeepCopy(self)

    def ShallowCopy(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_ShallowCopy(self)

    def Clear(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_Clear(self)

    def ExportPixelBufferLength(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_ExportPixelBufferLength(self)

    def ExportPixelBuffer(self, export_buffer, export_buffer_length):
        return _pyocrstudiosdk.OCRStudioSDKImage_ExportPixelBuffer(self, export_buffer, export_buffer_length)

    def ExportBase64JPEG(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_ExportBase64JPEG(self)

    def Scale(self, width, height):
        return _pyocrstudiosdk.OCRStudioSDKImage_Scale(self, width, height)

    def DeepCopyScaled(self, width, height):
        return _pyocrstudiosdk.OCRStudioSDKImage_DeepCopyScaled(self, width, height)

    def CropByQuad(self, quad_json, width, height):
        return _pyocrstudiosdk.OCRStudioSDKImage_CropByQuad(self, quad_json, width, height)

    def DeepCopyCroppedByQuad(self, quad_json, width, height):
        return _pyocrstudiosdk.OCRStudioSDKImage_DeepCopyCroppedByQuad(self, quad_json, width, height)

    def CropByRect(self, x, y, width, height):
        return _pyocrstudiosdk.OCRStudioSDKImage_CropByRect(self, x, y, width, height)

    def DeepCopyCroppedByRect(self, x, y, width, height):
        return _pyocrstudiosdk.OCRStudioSDKImage_DeepCopyCroppedByRect(self, x, y, width, height)

    def ShallowCopyCroppedByRect(self, x, y, width, height):
        return _pyocrstudiosdk.OCRStudioSDKImage_ShallowCopyCroppedByRect(self, x, y, width, height)

    def RotateByNinety(self, num_rotations):
        return _pyocrstudiosdk.OCRStudioSDKImage_RotateByNinety(self, num_rotations)

    def DeepCopyRotatedByNinety(self, num_rotations):
        return _pyocrstudiosdk.OCRStudioSDKImage_DeepCopyRotatedByNinety(self, num_rotations)

    def Width(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_Width(self)

    def Height(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_Height(self)

    def BytesPerLine(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_BytesPerLine(self)

    def Channels(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_Channels(self)

    def UnsafeBufferPtr(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_UnsafeBufferPtr(self)

    def OwnsPixelData(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_OwnsPixelData(self)

    def ForcePixelDataOwnership(self):
        return _pyocrstudiosdk.OCRStudioSDKImage_ForcePixelDataOwnership(self)

# Register OCRStudioSDKImage in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKImage_swigregister(OCRStudioSDKImage)
class OCRStudioSDKItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKItem

    def DeepCopy(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_DeepCopy(self)

    def Type(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_Type(self)

    def Name(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_Name(self)

    def Value(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_Value(self)

    def Confidence(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_Confidence(self)

    def Accepted(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_Accepted(self)

    def Attributes(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_Attributes(self)

    def HasImage(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_HasImage(self)

    def Image(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_Image(self)

    def Description(self):
        return _pyocrstudiosdk.OCRStudioSDKItem_Description(self)

# Register OCRStudioSDKItem in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKItem_swigregister(OCRStudioSDKItem)
class OCRStudioSDKItemIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKItemIterator

    def __init__(self, copy):
        _pyocrstudiosdk.OCRStudioSDKItemIterator_swiginit(self, _pyocrstudiosdk.new_OCRStudioSDKItemIterator(copy))

    def IsEqualTo(self, other):
        return _pyocrstudiosdk.OCRStudioSDKItemIterator_IsEqualTo(self, other)

    def __eq__(self, other):
        return _pyocrstudiosdk.OCRStudioSDKItemIterator___eq__(self, other)

    def __ne__(self, other):
        return _pyocrstudiosdk.OCRStudioSDKItemIterator___ne__(self, other)

    def Next(self):
        return _pyocrstudiosdk.OCRStudioSDKItemIterator_Next(self)

    def Step(self):
        return _pyocrstudiosdk.OCRStudioSDKItemIterator_Step(self)

    def Key(self):
        return _pyocrstudiosdk.OCRStudioSDKItemIterator_Key(self)

    def Item(self):
        return _pyocrstudiosdk.OCRStudioSDKItemIterator_Item(self)

# Register OCRStudioSDKItemIterator in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKItemIterator_swigregister(OCRStudioSDKItemIterator)
class OCRStudioSDKTarget(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKTarget

    def DeepCopy(self):
        return _pyocrstudiosdk.OCRStudioSDKTarget_DeepCopy(self)

    def Description(self):
        return _pyocrstudiosdk.OCRStudioSDKTarget_Description(self)

    def ItemsCountByType(self, item_type):
        return _pyocrstudiosdk.OCRStudioSDKTarget_ItemsCountByType(self, item_type)

    def HasItem(self, item_type, item_name):
        return _pyocrstudiosdk.OCRStudioSDKTarget_HasItem(self, item_type, item_name)

    def Item(self, item_type, item_name):
        return _pyocrstudiosdk.OCRStudioSDKTarget_Item(self, item_type, item_name)

    def ItemsBegin(self, item_type):
        return _pyocrstudiosdk.OCRStudioSDKTarget_ItemsBegin(self, item_type)

    def ItemsEnd(self, item_type):
        return _pyocrstudiosdk.OCRStudioSDKTarget_ItemsEnd(self, item_type)

    def IsFinal(self):
        return _pyocrstudiosdk.OCRStudioSDKTarget_IsFinal(self)

# Register OCRStudioSDKTarget in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKTarget_swigregister(OCRStudioSDKTarget)
class OCRStudioSDKResult(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKResult

    def DeepCopy(self):
        return _pyocrstudiosdk.OCRStudioSDKResult_DeepCopy(self)

    def TargetsCount(self):
        return _pyocrstudiosdk.OCRStudioSDKResult_TargetsCount(self)

    def TargetByIndex(self, target_index):
        return _pyocrstudiosdk.OCRStudioSDKResult_TargetByIndex(self, target_index)

    def AllTargetsFinal(self):
        return _pyocrstudiosdk.OCRStudioSDKResult_AllTargetsFinal(self)

    def Serialize(self):
        return _pyocrstudiosdk.OCRStudioSDKResult_Serialize(self)

# Register OCRStudioSDKResult in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKResult_swigregister(OCRStudioSDKResult)
class OCRStudioSDKSession(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKSession

    def Description(self):
        return _pyocrstudiosdk.OCRStudioSDKSession_Description(self)

    def ProcessImage(self, image):
        return _pyocrstudiosdk.OCRStudioSDKSession_ProcessImage(self, image)

    def ProcessData(self, data_str):
        return _pyocrstudiosdk.OCRStudioSDKSession_ProcessData(self, data_str)

    def CurrentResult(self):
        return _pyocrstudiosdk.OCRStudioSDKSession_CurrentResult(self)

    def Reset(self):
        return _pyocrstudiosdk.OCRStudioSDKSession_Reset(self)

    def Suspend(self):
        return _pyocrstudiosdk.OCRStudioSDKSession_Suspend(self)

    def Resume(self):
        return _pyocrstudiosdk.OCRStudioSDKSession_Resume(self)

# Register OCRStudioSDKSession in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKSession_swigregister(OCRStudioSDKSession)
class OCRStudioSDKInstance(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    @staticmethod
    def CreateStandalone(json_instance_init_params=None):
        return _pyocrstudiosdk.OCRStudioSDKInstance_CreateStandalone(json_instance_init_params)

    @staticmethod
    def CreateFromPath(configuration_filename, json_instance_init_params=None):
        return _pyocrstudiosdk.OCRStudioSDKInstance_CreateFromPath(configuration_filename, json_instance_init_params)

    @staticmethod
    def CreateFromBuffer(configuration_buffer, configuration_buffer_size, json_instance_init_params=None):
        return _pyocrstudiosdk.OCRStudioSDKInstance_CreateFromBuffer(configuration_buffer, configuration_buffer_size, json_instance_init_params)

    @staticmethod
    def LibraryVersion():
        return _pyocrstudiosdk.OCRStudioSDKInstance_LibraryVersion()
    __swig_destroy__ = _pyocrstudiosdk.delete_OCRStudioSDKInstance

    def Description(self):
        return _pyocrstudiosdk.OCRStudioSDKInstance_Description(self)

    def CreateSession(self, authorization_signature, json_session_params, callback_delegate=None):
        return _pyocrstudiosdk.OCRStudioSDKInstance_CreateSession(self, authorization_signature, json_session_params, callback_delegate)

# Register OCRStudioSDKInstance in _pyocrstudiosdk:
_pyocrstudiosdk.OCRStudioSDKInstance_swigregister(OCRStudioSDKInstance)

